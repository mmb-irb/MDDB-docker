{"version":3,"file":"static/js/browse.d9ce79b3.chunk.js","mappings":"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","sources":["webpack://mdposit/./src/components/animated-card/style.module.css?d4d9","components/animated-card/index.js","webpack://mdposit/./src/components/loading/style.module.css?350d","components/loading/index.js","hooks/use-toggle-state/index.js","webpack://mdposit/./src/components/highlight/style.module.css?2fb6","components/highlight/index.js","webpack://mdposit/./src/pages/browse/style.module.css?1eb9","webpack://mdposit/./src/pages/browse/search/style.module.css?d5c5","pages/browse/search/index.js","pages/browse/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__M9GCG\"};","import React, { useLayoutEffect, useRef, forwardRef } from 'react';\nimport { Card } from '@mui/material';\n\nimport reducedMotion from '../../utils/reduced-motion';\n\nimport style from './style.module.css';\n\nconst KEYFRAMES = { opacity: [0, 1] };\n\nif (!reducedMotion()) {\n  KEYFRAMES.transform = ['translateY(50px)', 'translateY(0)'];\n}\n\nconst ANIMATION_OPTIONS = {\n  fill: 'both',\n  easing: 'cubic-bezier(0, .99, .56, 1.1)',\n  duration: 500,\n};\n\n// Make the card appear and slide softly from down to up when the page is loaded\nconst AnimatedCard = forwardRef(({ overrideComponent, ...props }, ref) => {\n  const containerRef = useRef(null);\n\n  useLayoutEffect(() => {\n    const node = containerRef.current && containerRef.current.firstElementChild;\n    if (!(node && node.animate)) return;\n\n    const index = Array.from(\n      document.querySelectorAll('main section'),\n    ).findIndex(section => node === section);\n\n    const animation = node.animate(KEYFRAMES, {\n      ...ANIMATION_OPTIONS,\n      delay: index * 150,\n    });\n\n    return () => animation.cancel();\n  }, []);\n\n  const Component = overrideComponent ? 'section' : Card;\n\n  return (\n    <div ref={containerRef} className={style.container}>\n      <Component component=\"section\" {...props} ref={ref} />\n    </div>\n  );\n});\n\nexport default AnimatedCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"loading\":\"style_loading__Vdgbc\",\"show\":\"style_show__wIdQ5\"};","import React, { useLayoutEffect } from 'react';\nimport cn from 'classnames';\n//import { sleep, frame } from 'timing-functions';\n\nimport { CircularProgress } from '@mui/material';\n\nimport useToggleState from '../../hooks/use-toggle-state';\n\nimport style from './style.module.css';\n\nconst WAIT_DELAY = 750; // 750ms\n\n// This component is used to hide the loading indicator for a bit (just in case\n// the next content is quick enough, because we don't want a flash with the\n// indicator), then slowly display it.\n// In the best of cases this component will *never* even have to be displayed\nconst Loading = ({ wait = WAIT_DELAY }) => {\n  const [flag, toggleFlag] = useToggleState(false);\n  // This is a hook\n  useLayoutEffect(() => {\n    const timer = setTimeout(() => {\n      toggleFlag();\n    }, wait);\n    return () => clearTimeout(timer);\n\n    /*\n    let mounted = true;\n    sleep(wait) // wait for a bit\n      // this might be useful if the page is not even visible\n      .then(() => frame()) // Wait for the next animation frame\n      // After waiting, check if mounted is still true\n      .then(() => {\n        // If mounted is false it means that the loading was over before the wait ended\n        if (mounted) toggleFlag(); // This toggleFlag changes the flag from false to true\n      });\n    // In a useEffect or similar hooks, \"return\" stands for an ending function\n    // The ending function is called when the components is no longer rendered\n    return () => (mounted = false); // When useLayoutEffect is over or cancelled, set mounted to false\n    */\n  }, [toggleFlag, wait]); // useLayoutEffect is only called when the toggleFlag is called (only once)\n  // Return an animated circle\n  return (\n    <div\n      title=\"loading...\" // This tag appears when the mouse remains over the circle\n      className={cn(style.loading, { [style.show]: flag })}\n    >\n      {flag && (\n        <CircularProgress\n          variant=\"indeterminate\"\n          color=\"primary\"\n          size={50}\n          thickness={5}\n        /> // Renders the circle\n      )}\n    </div>\n  );\n};\n\nexport default Loading;\n","import { useState, useCallback } from 'react';\n\n// useToggleState is a custom hook which returns a state and a custom function to calculate the new state\nconst useToggleState = initialState => {\n  // useState is a React hook which returns a state and a function to change this state respectively\n  // The state is the initialState at the moment it is called\n  const [state, setState] = useState(!!initialState);\n  // useCallback is a React hook which returns a memoize callback\n  const toggleState = useCallback(valueOrSetter => {\n    // Set the state according to the input type\n    switch (typeof valueOrSetter) {\n      // Funtions are accepted and set as state\n      case 'function':\n        setState(valueOrSetter);\n        break;\n      // In case of booleans, numers and strings, a function that returns the opposite in boolean format is returned\n      case 'boolean':\n      case 'number':\n      case 'string':\n        setState(Boolean(valueOrSetter));\n        break;\n      // In other cases, returns a function which just change the state to the opposite of the previours state in boolean format\n      default:\n        setState(state => !state);\n    }\n  }, []);\n\n  return [state, toggleState];\n};\n\nexport default useToggleState;\n","// extracted by mini-css-extract-plugin\nexport default {\"highlightable\":\"style_highlightable__biB77\"};","import React from 'react';\nimport { escapeRegExp, memoize } from 'lodash-es';\n\nimport style from './style.module.css';\n\n// A fragment of text is converted to a specific RegExp format\n// The generated RexExp matches each word from the original text (highlight)\nconst spaces = /\\s+/;\n// Memoize saves the result of the function when the properties are the same\nconst getRegExFor = memoize(\n  highlight =>\n    new RegExp(\n      `(${highlight\n        .toString() // Convert it into a string\n        .trim() // Remove spaces\n        .split(spaces) // Split by a previously defined RegExp\n        // escapeRegExp returns a string which \"escapes\" RegExp special characters\n        .map(escapeRegExp) // It is equivalent to adding \"\\\" before each special character\n        .join('|')})`, // Finally, join all split fragments separated by \"|\"\n      'i', // \"i\" is a RegExp flag called \"ignore case\"\n    ),\n);\n\n// This function finds text fragments inside a text input which must be highlighted\n// This function expects to recieve 2 propierties: \"highlight\" and \"children\"\n// \"highlight\" is a text search provided by the user\n// \"children\" is all the text where the highlight must be serached\n// Propierties are delcared as <Highlight highlight={highlight}> children </Highlight>\n// This function returns multiple reacts elements which contain text chunks tagged to be marked or not\nconst Highlight = React.memo(({ highlight, children }) => {\n  // If multiple childs are requested then apply highlight to each of them separatedly\n  if (Array.isArray(children)) {\n    return children.map((child, i) => (\n      <Highlight highlight={highlight} key={i}>\n        {child}\n      </Highlight>\n    ));\n  }\n\n  // If there is no text to highlight or selected children, send the children back\n  // If children is not a string or a finite number, send the children back\n  if (\n    !highlight ||\n    !children ||\n    !(typeof children === 'string' || Number.isFinite(children))\n  ) {\n    return children || null; // If children is falsy (undefined or similar) returns null instead, which is supported by React\n  }\n\n  // Generates a RegExp pattern that matches each word from the provided text search (highlight)\n  const re = getRegExFor(highlight);\n\n  return (\n    <span className={style.highlightable}>\n      {children\n        .toString() // Convert it into a string\n        .split(re) // Split the children by the previously generated RegExp pattern\n        .filter(Boolean) // Save only non empty (\"\") strings\n        .map((chunk, index) =>\n          React.createElement(\n            // Create a new React element for each chunk\n            // Since children has been split by the \"re\" RegExp pattern, the half of the chunks should match this pattern\n            // Chunks wich match \"re\" are tagged as \"mark\" and chunk which do not match are tagged as \"span\"\n            re.test(chunk) ? 'mark' : 'span',\n            { key: index }, // Save the array index as \"key\" attribute of an object\n            chunk, // save the chunk itself\n          ),\n        )}\n    </span>\n  );\n});\n\nexport default Highlight;\n","// extracted by mini-css-extract-plugin\nexport default {\"table-body\":\"style_table-body__UaSDI\",\"invalid-results\":\"style_invalid-results__xfJgr\",\"table-head\":\"style_table-head__tmuYe\",\"not-published\":\"style_not-published__KTvNz\",\"center\":\"style_center__5C2Uk\",\"no-results-card\":\"style_no-results-card__hJ248\",\"minheight\":\"style_minheight__Qpr-9\",\"no-results-text\":\"style_no-results-text__PtOSj\",\"analysis\":\"style_analysis__M4Th0\",\"reduced-margin\":\"style_reduced-margin__XWbYA\",\"tab\":\"style_tab__4zoWO\",\"small\":\"style_small__QxCJm\",\"horizontal\":\"style_horizontal__f42Xi\",\"selector\":\"style_selector__XVrF1\",\"fillheight\":\"style_fillheight__1UWvV\"};","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"style_searchbar__L3fSk\",\"searchbar-icon\":\"style_searchbar-icon__o1zED\",\"searchbar-letters\":\"style_searchbar-letters__NY7xQ\"};","import React, { useState, useEffect, useCallback } from 'react';\nimport { parse, stringify } from 'qs';\nimport { debounce } from 'lodash-es';\n\nimport { InputAdornment, TextField } from '@mui/material';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport { docs } from '../../help/documentation';\n\nimport style from './style.module.css';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { HOST_CONFIG } from '../../../utils/constants';\n\n// Half second delay (500 ms) to process changes in the search bar\nconst DEBOUNCE_DELAY = 500;\n\n// Define the non-changing props\nconst inputProps = {\n  'aria-label': 'Search projects by text',\n  startAdornment: (\n    <InputAdornment position=\"start\">\n      <FontAwesomeIcon\n        icon={faSearch}\n        size=\"2x\"\n        className={style['searchbar-icon']}\n      />\n    </InputAdornment>\n  ),\n  classes: {\n    input: style['searchbar-letters'],\n  },\n};\n\n// This function is never called directly, but it is called indirectly by calling \"debouncedUpdateLocation\"\nexport const updateLocation = (location, history, value) => {\n  const { search, ...nextSearchObject } = parse(location.search, {\n    ignoreQueryPrefix: true,\n  });\n  // If should replace it would be like a history.replace\n  // Otheriwse it would be like a history.push\n  const shouldReplace = Boolean(search) === Boolean(value);\n  if (value) nextSearchObject.search = value;\n  if (search === value) return;\n  // If this search is different to the previous search\n  // Reset page to the first page\n  nextSearchObject.page = undefined;\n  // Update history\n  history({\n    ...location,\n    search: stringify(nextSearchObject),\n    replace: shouldReplace,\n  });\n};\n\n// \"debounce\" is a method from the \"lodash\" library that invokes a function after a time delay\n// debounced functions are cancellable before the time delay has passed\n// debounced function, to avoid changing the URL too much while typing\nconst debouncedUpdateLocation = debounce(updateLocation, DEBOUNCE_DELAY);\n\n// This function is called each time that a letter is typed in the search bar\nconst Search = () => {\n  // Get the history and the location\n  const location = useLocation();\n  const history = useNavigate();\n  // Here, parse converts a query formatted search (e.g. \"?search=x\") in a string only with the text search (e.g. \"x\")\n  // Return the parsed searh text (value) and a function to change this value (SetValue)\n  const [value, setValue] = useState(\n    parse(location.search, { ignoreQueryPrefix: true }).search,\n  );\n  // Cancel the last debouncedUpdateLocation if it has not been executed yet because there is a new change\n  useEffect(() => debouncedUpdateLocation.cancel, []);\n  // Update the state and the query search in the URL with the new searched value\n  const handleChange = useCallback(\n    ({ target: { value } }) => {\n      setValue(value);\n      debouncedUpdateLocation(location, history, value);\n    },\n    [location, history],\n  );\n  const doc = docs.find(doc => doc.id === 'browser');\n\n  return (\n    <TextField\n      title={doc.text}\n      value={value || ''}\n      onChange={handleChange}\n      className={style.searchbar}\n      InputProps={inputProps}\n      placeholder={HOST_CONFIG.searchExample}\n    />\n  );\n};\n\nexport default Search;\n","// React logic\nimport React, {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\n\n// String managers\nimport { parse, stringify } from 'qs';\n\n// Classnames\nimport cn from 'classnames';\n\n// Visual assets\nimport {\n  CardContent,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TablePagination,\n  TableFooter,\n  Typography,\n  Chip,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormControl\n} from '@mui/material';\n\nimport LazyImg from '../../components/lazy-img';\n\n// Additional components\nimport Card from '../../components/animated-card'; // The exceled parcels in which almost all features are based\nimport Highlight from '../../components/highlight'; // Used to underline text\nimport Loading from '../../components/loading'; // Displays an animated \"loading\" circle\n\n// API acces\nimport useAPI from '../../hooks/use-api';\n\n// Constants\nimport { BASE_PATH_PROJECTS, HOST_CONFIG, NICE_NAMES } from '../../utils/constants';\n\n// CSS styles\nimport style from './style.module.css';\n\n// It is used to check if the user has the reduced motion setting active\nimport reducedMotion from '../../utils/reduced-motion';\nimport { SCREENSHOT_FILENAME } from '../../utils/constants';\n\n// The search bar\nimport Search from'./search';\n\nconst DEFAULT_PAGE = 1;\nconst DEFAULT_LIMIT = 10;\nconst na = 'Not available';\n// Placeholder for when there is no option selected\nconst all = 'All results';\n\n// Define non-changing props used by the table footer\nconst rowsPerPageOptions = [5, 10, 25, 50];\nconst backIconButtonProps = { title: 'Previous page' };\nconst nextIconButtonProps = { title: 'Next page' };\n\n// These keyframes are used for an animate()\n// An image opacity is iterated between 0 (invisible) and 1 (visible)\nconst keyframes = {\n  opacity: [0, 1],\n};\n\n// Same image vertical position is iterated between 0 and 50 pixels (It may have no effect)\n// This is only set when user has not activated the reduced motion option from the navigator\nif (!reducedMotion()) {\n  keyframes.transform = ['translateX(2.5%)', 'translateX(0)'];\n}\n\n// Set manually which references have entropies\n// This needs to be updated by hand when there is a new reference with entropies\n// This workaround prevents downloading all references data to ckeck it, which would be unefficient\nconst referencesWithEntropies = ['P0DTC2'];\nconst hasEntropies = reference => {\n  return referencesWithEntropies.indexOf(reference) > -1;\n};\nconst referencesWithEpitopes = ['P0DTC2'];\nconst hasEpitopes = reference => {\n  return referencesWithEpitopes.indexOf(reference) > -1;\n};\n\n// Set the allowed chips\nconst allowedAnalysisChips = [\n  'rmsds',\n  'rgyr',\n  'fluctuation',\n  'pca',\n  'rmsd-perres',\n  'rmsd-pairwise',\n  'dist-perres',\n  'hbonds',\n  'electrostatic',\n  'energies',\n  'pockets',\n  'mutations',\n  'epitopes',\n  'sasa',\n  'populations',\n  'markov'\n];\n\nconst Row = ({ project, highlight, index, previewUrl }) => {\n  // Harvest data from the project object\n  const {\n    identifier,\n    accession,\n    published,\n    pdbInfo,\n    metadata,\n    analyses,\n    files,\n    mdCount\n  } = project;\n  // Declare a hook from a type called \"useRef\"\n  const ref = useRef(null);\n  // This type of hook is like an \"useEfect\" but it is runned after the layout is calculated and before it is painted\n  // useEffect here would re-render the whole page, thus creating \"load hesitation\" and a delay\n  useLayoutEffect(() => {\n    if (!(ref.current && ref.current.animate)) return;\n    // Animate the rows to move from right to left when they appear\n    const animation = ref.current.animate(keyframes, {\n      fill: 'both',\n      easing: 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',\n      duration: 750,\n      // Set a delay which depends on the index to create a cascade effect\n      delay: 100 + index * 75,\n    });\n\n    return () => animation.cancel();\n  }, [index]);\n\n  // In case we retrieve an errored entry\n  if (project.error) return (\n    <TableRow ref={ref} className={style['not-published']}>\n      {/* accession */}\n      <TableCell className={style.center}> Errored entry </TableCell>\n      {/* name */}\n      <TableCell className={style.center}> {project.error} </TableCell>\n      {/* groups */}\n      <TableCell className={style.center}> - </TableCell>\n      {/* analyses */}\n      <TableCell className={style.center}> - </TableCell>\n    </TableRow>\n  );\n\n  // Push the electrostatic surface analysis if we have interactions in metadata\n  if (\n    metadata &&\n    metadata.INTERACTIONS &&\n    metadata.INTERACTIONS.length > 0 &&\n    analyses &&\n    !analyses.includes('electrostatic')\n  )\n    analyses.push('electrostatic');\n\n  // Push the populations analysis if we have the populations.json file\n  if (\n    files &&\n    files.find(file => file === 'populations.json') &&\n    analyses &&\n    !analyses.includes('populations')\n  )\n    analyses.push('populations');\n\n  // Check if any metadata reference has entropies\n  const metadataReferences = metadata && metadata.REFERENCES;\n  const anySuitableReferenceWithEntropies =\n    metadataReferences && metadataReferences.some(reference => hasEntropies(reference));\n  // Push the mutations analysis if so\n  if (\n    anySuitableReferenceWithEntropies &&\n    analyses &&\n    !analyses.includes('mutations')\n  )\n    analyses.push('mutations');\n  // Check if any metadata reference has a map and its reference data has entropies\n  const anySuitableReferenceWithEpitopes =\n    metadataReferences && metadataReferences.some(reference => hasEpitopes(reference));\n  // Push the entropies analysis if so\n  if (\n    anySuitableReferenceWithEpitopes &&\n    analyses &&\n    !analyses.includes('epitopes')\n  )\n    analyses.push('epitopes');\n\n  // Returns a table with multiple rows\n  // The 3 first rows: accession, PDB accession and name are searchable. Search text is highlighted when found\n  return (\n    <TableRow\n      ref={ref} // \"ref\" is a method from TableRow and many other rendered elements\n      className={cn({ [style['not-published']]: !published })}\n    >\n      {/* accession */}\n      <TableCell className={style.center}>\n        <Link\n          to={{\n            pathname: `/id/${accession || identifier}/overview`,\n            // We pass the selected project data so there is no need to query it again\n            state: { projectData: project },\n          }}\n        >\n          <Highlight highlight={highlight}>\n            {accession || identifier}\n            {!published && <div>(not published)</div>}\n          </Highlight>\n        </Link>\n        {mdCount > 1 && <div className={style.small}>{`${mdCount} MDs`}</div>}\n      </TableCell>\n      {/* name */}\n      <TableCell className={style.center}>\n        <Highlight highlight={highlight}>\n          {metadata && metadata.NAME\n            ? metadata.NAME\n            : pdbInfo && pdbInfo.compound\n            ? pdbInfo.compound\n            : na}\n        </Highlight>\n      </TableCell>\n      {/* preview */}\n      <TableCell className={style.center}>\n        <LazyImg\n          src={previewUrl}\n          width=\"110\"\n          height=\"110\"\n          loading=\"lazy\"\n          alt={`Project preview`}\n        />\n      </TableCell>\n      {/* analyses */}\n      <TableCell className={style.center}>\n        <Chip\n          key={'trajectory'}\n          clickable\n          className={style.analysis}\n          component={Link}\n          to={{\n            pathname: `/id/${accession || identifier}/trajectory`,\n            // We pass the selected project data so there is no need to query it again\n            state: { projectData: project },\n          }}\n          label={'Trajectory'}\n          variant=\"outlined\"\n        />\n        {analyses && analyses.length\n          ? analyses\n              // Available analyses are sorted alphabetically\n              .sort()\n              // Display only allowed chips\n              .filter(element => allowedAnalysisChips.includes(element))\n              // For each analysis create a clickable button which links to the analysis route\n              .map(analysis => (\n                <Chip\n                  key={analysis}\n                  clickable\n                  className={style.analysis}\n                  component={Link}\n                  to={{\n                    pathname: `/id/${accession || identifier}/${analysis}`,\n                    // We pass the selected project data so there is no need to query it again\n                    state: { projectData: project },\n                  }}\n                  label={NICE_NAMES.get(analysis) || analysis}\n                  variant=\"outlined\"\n                />\n              ))\n          : na}\n      </TableCell>\n    </TableRow>\n  );\n};\n\nconst Browse = () => {\n  // Get the location and the history\n  const location = useLocation();\n  const history = useNavigate();\n  // Convert the URL string into an object\n  // This \"parse\" comes from the \"qs\" library\n  // WARNING: The default \"parse\" decoding behaviour has a strong conflict between '+' and blank space character\n  // This workaround first decodes and then parses without decoding\n  // The 'decoder' option is necessary for not decoding\n  const decoded = decodeURIComponent(location.search);\n  const search = parse(decoded, {\n    ignoreQueryPrefix: true,\n    decoder: c => c,\n  });\n\n  // State of the selected option\n  const [ selectedOption, setSelectedOption ] = useState(search.option || all);\n\n  // Handle when user clicks on the option selector\n  const handleChange = useCallback(\n    ({ target: { value } }) => {\n      // Update the history (which does not rerender the page)\n      history({\n        ...location,\n        search: stringify({\n          search: search.search,\n          query: search.query,\n          // Do not keep the page\n          // Thus if option is changed then the page is reset\n          option: value && value !== all ? value : undefined,\n        }),\n      });\n      // Update the actual value thus rerendering the page\n      setSelectedOption(value);\n    }, [location, search, setSelectedOption]\n  );\n  \n  // Get the options field from the host configuration\n  const optionsField = HOST_CONFIG.optionsField;\n  // Set the selected option filter\n  const selectedOptionFilter = selectedOption && selectedOption !== all && `${optionsField}+*${selectedOption}`;\n\n  // Convert the specified object back to a single encoded string\n  const searchString = stringify({\n    search: search.search,\n    query: search.query,\n    ref: search.ref,\n    page: search.page || DEFAULT_PAGE,\n    limit: search.limit || DEFAULT_LIMIT,\n    filter: selectedOptionFilter\n  });\n\n  // Scroll up when the page is changed\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [search.page]);\n\n  // Save the previous query payload\n  // It is rendered in low opacity when the new query payload is empty\n  const previousPayload = useRef(null);\n\n  // Options data from the API\n  const optionsUrl = optionsField ? `${BASE_PATH_PROJECTS}/options?projection=${optionsField}` : null;\n  const { payload: optionsPayload, error: optionsError } = useAPI(optionsUrl);\n\n  // Add the all flag at the begining as default value\n  // Remove null values since they are not queryable\n  const availableOptions = useMemo(() => {\n    let actualOptons = [];\n    if (optionsPayload)\n      actualOptons = Object.keys(optionsPayload[optionsField]).filter(key => key !== 'null');\n    return [ all, ...actualOptons ];\n  }, [optionsPayload]);\n\n  // Projects data from the API\n  const queryUrl = `${BASE_PATH_PROJECTS}?${searchString}`;\n  const { loading: queryLoading, payload: queryPayload, error: queryError } = useAPI(queryUrl);\n\n  // While loading\n  // Code above is runned multiple times (around 5) each time the browser is loaded\n  if (queryLoading && !previousPayload.current) return <Loading />;\n\n  // When error\n  // This usually happens when the API does not work properly\n  if (queryError) return queryError.toString();\n  if (optionsError) return optionsError.toString();\n\n  // Download project screenshots\n  // First set the URLs for the API\n  \n  // Define the results for the final render since it won't support 'null's\n  let results;\n  let matchCount = 0;\n  if (queryPayload) {\n    results = queryPayload.projects;\n    matchCount = queryPayload.filteredCount;\n    previousPayload.current = queryPayload;\n  } else if (previousPayload.current) {\n    results = previousPayload.current.projects;\n    matchCount = previousPayload.current.filteredCount;\n  } else results = [];\n\n  // Set the screenshot URLs for the API\n  const screenshotsUrls = results.map(\n    project => `${BASE_PATH_PROJECTS}/${project.identifier}/files/${SCREENSHOT_FILENAME}`\n  );\n\n  // When success\n  return (\n    <Card>\n      <CardContent className={style.minheight}>\n        <div className={style.horizontal}>\n          <Search/>\n          {optionsField && <FormControl className={style.selector}>\n            <InputLabel>{HOST_CONFIG.optionsLabel}</InputLabel>\n            <Select\n              label={HOST_CONFIG.optionsLabel}\n              value={selectedOption !== all ? selectedOption : ''}\n              onChange={handleChange}\n              className={style.fillheight}\n            >\n              {availableOptions.map((value, i) => (\n                <MenuItem key={i} value={value}>\n                  {HOST_CONFIG.optionsNiceNames[value] || value}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n            \n          }          \n        </div>\n        {/* Render a 'no results' card when there are no results for the last search */}\n        {!queryLoading && !queryPayload ? (\n          <Card className={style['no-results-card']}>\n            <Typography variant=\"h5\" className={style['no-results-text']}>\n              No results were found\n            </Typography>\n          </Card>\n        ) : []}\n        <Table>\n          {/*className={cn({ [style['invalid-results']]: !queryPayload })} */}\n          {/* Table head with the names of each colum */}\n          <TableHead className={style['table-head']}>\n            <TableRow>\n              <TableCell className={style.center}>accession</TableCell>\n              <TableCell className={style.center}>name</TableCell>\n              <TableCell className={style.center}>preview</TableCell>\n              <TableCell className={style.center}>analyses</TableCell>\n            </TableRow>\n          </TableHead>\n          {/* Table body with the content, which is defined above in the Row constant */}\n          {/* When the search has no results the table gets an opacity of 0.25 */}\n          <TableBody\n            className={queryPayload\n              ? cn(style['table-body'])\n              : cn(style['table-body'], style['invalid-results'])\n            }\n          >\n            {/* Create a row for each project in the query payload*/}\n            {results.map((project, index) => (\n              <Row\n                // Load the propierties (inputs) that the class \"Row\" is expecting\n                project={project} // Load identifier, accession, published, pdbInfo and analyses\n                highlight={search.search} // Load the highlight\n                index={index} // Load the index\n                previewUrl={screenshotsUrls[index]}\n                key={index} // Add a key for react to do not complain\n              />\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              {/* Table footer used to change the page to see more results */}\n              <TablePagination\n                // IMPORTANT: Pagination is controled through the 'history', which may be updated from 'search'\n                // Many of the following variables are methods from TablePagination (They are tagged as MTP). https://material-ui.com/api/table-pagination/\n                rowsPerPageOptions={rowsPerPageOptions} // (MTP) Optional numbers of rows displayed in each page. It can be modified by the user.\n                colSpan={6} // Set the anchor of columns which is taken as a reference for the horizontal position of the footer\n                count={matchCount} // (MTP) Total number of rows\n                rowsPerPage={+search.limit || DEFAULT_LIMIT} // (MTP) The actual number of rows displayed\n                page={(+search.page || DEFAULT_PAGE) - 1} // (MTP) The actual page\n                onPageChange={(_, page) => {\n                  // (MTP) When the page is changed\n                  history({\n                    ...location, // Load all location variables: hast, pathname, search and state\n                    // Convert into a single encoded string all parameters listed below\n                    search: stringify({\n                      search: search.search,\n                      query: search.query,\n                      option: search.option,\n                      page: page + 1 === DEFAULT_PAGE ? undefined : page + 1,\n                      limit:\n                        !search.limit || +search.limit === DEFAULT_LIMIT\n                          ? undefined\n                          : +search.limit,\n                    }),\n                  });\n                }}\n                onRowsPerPageChange={({ target: { value } }) => {\n                  // (MTP) When the rowsPerPage is modified by the user\n                  history({\n                    ...location, // Load all location variables: hast, pathname, search and state\n                    // Convert into a single encoded string all parameters listed below\n                    search: stringify({\n                      search: search.search,\n                      query: search.query,\n                      option: search.option,\n                      limit: +value === DEFAULT_LIMIT ? undefined : value,\n                    }),\n                  });\n                }}\n                backIconButtonProps={backIconButtonProps} // (MTP) Non-changing propierties of the back page button\n                nextIconButtonProps={nextIconButtonProps} // (MTP) Non-changing propierties of the next page button\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Browse;\n"],"names":["KEYFRAMES","opacity","reducedMotion","transform","ANIMATION_OPTIONS","fill","easing","duration","forwardRef","_ref","ref","overrideComponent","props","containerRef","useRef","useLayoutEffect","node","current","firstElementChild","animate","index","Array","from","document","querySelectorAll","findIndex","section","animation","delay","cancel","Component","Card","_jsx","className","style","children","component","WAIT_DELAY","wait","flag","toggleFlag","useToggleState","timer","setTimeout","clearTimeout","title","cn","CircularProgress","variant","color","size","thickness","initialState","state","setState","useState","toggleState","useCallback","valueOrSetter","Boolean","spaces","getRegExFor","memoize","highlight","RegExp","concat","toString","trim","split","map","escapeRegExp","join","Highlight","React","isArray","child","i","Number","isFinite","re","filter","chunk","test","key","inputProps","startAdornment","InputAdornment","position","FontAwesomeIcon","icon","faSearch","classes","input","debouncedUpdateLocation","debounce","updateLocation","location","history","value","search","nextSearchObject","parse","ignoreQueryPrefix","shouldReplace","page","undefined","stringify","replace","Search","useLocation","useNavigate","setValue","useEffect","handleChange","target","doc","docs","find","id","TextField","text","onChange","InputProps","placeholder","HOST_CONFIG","searchExample","na","all","rowsPerPageOptions","backIconButtonProps","nextIconButtonProps","keyframes","referencesWithEntropies","referencesWithEpitopes","allowedAnalysisChips","Row","project","previewUrl","identifier","accession","published","pdbInfo","metadata","analyses","files","mdCount","error","_jsxs","TableRow","TableCell","INTERACTIONS","length","includes","push","file","metadataReferences","REFERENCES","some","reference","indexOf","hasEntropies","hasEpitopes","Link","to","pathname","projectData","NAME","compound","LazyImg","src","width","height","loading","alt","Chip","clickable","label","sort","element","analysis","NICE_NAMES","get","Browse","decoded","decodeURIComponent","decoder","c","selectedOption","setSelectedOption","option","_ref2","query","optionsField","selectedOptionFilter","searchString","limit","window","scrollTo","previousPayload","optionsUrl","BASE_PATH_PROJECTS","payload","optionsPayload","optionsError","useAPI","availableOptions","useMemo","actualOptons","Object","keys","queryUrl","queryLoading","queryPayload","queryError","Loading","results","matchCount","projects","filteredCount","screenshotsUrls","SCREENSHOT_FILENAME","CardContent","FormControl","InputLabel","optionsLabel","Select","MenuItem","optionsNiceNames","Typography","Table","TableHead","TableBody","TableFooter","TablePagination","colSpan","count","rowsPerPage","onPageChange","_","onRowsPerPageChange","_ref3"],"sourceRoot":""}