{"version":3,"file":"static/js/overview.9d162427.chunk.js","mappings":"yJACA,QAA4B,yB,eCM5B,MAAMA,EAAY,CAAEC,QAAS,CAAC,EAAG,KAE5BC,EAAAA,EAAAA,OACHF,EAAUG,UAAY,CAAC,mBAAoB,kBAG7C,MAAMC,EAAoB,CACxBC,KAAM,OACNC,OAAQ,iCACRC,SAAU,KAgCZ,GA5BqBC,EAAAA,EAAAA,aAAW,CAAAC,EAAkCC,KAAS,IAA1C,kBAAEC,KAAsBC,GAAOH,EAC9D,MAAMI,GAAeC,EAAAA,EAAAA,QAAO,OAE5BC,EAAAA,EAAAA,kBAAgB,KACd,MAAMC,EAAOH,EAAaI,SAAWJ,EAAaI,QAAQC,kBAC1D,IAAMF,IAAQA,EAAKG,QAAU,OAE7B,MAAMC,EAAQC,MAAMC,KAClBC,SAASC,iBAAiB,iBAC1BC,WAAUC,GAAWV,IAASU,IAE1BC,EAAYX,EAAKG,QAAQnB,EAAW,IACrCI,EACHwB,MAAe,IAARR,IAGT,MAAO,IAAMO,EAAUE,QAAQ,GAC9B,IAEH,MAAMC,EAAYnB,EAAoB,UAAYoB,EAAAA,EAElD,OACEC,EAAAA,EAAAA,KAAA,OAAKtB,IAAKG,EAAcoB,UAAWC,EAAgBC,UACjDH,EAAAA,EAAAA,KAACF,EAAS,CAACM,UAAU,aAAcxB,EAAOF,IAAKA,KAC3C,G,qMC1CH,SAAS2B,EAA2BC,GACzC,OAAOC,EAAAA,EAAAA,IAAqB,iBAAkBD,EAChD,EAC2BE,EAAAA,EAAAA,GAAuB,iBAAkB,CAAC,OAAQ,Y,eCD7E,MAAMC,EAAY,CAAC,iBAAkB,aAmB/BC,GAAkBC,EAAAA,EAAAA,IAAO,MAAO,CACpCC,KAAM,iBACNN,KAAM,OACNO,kBAAmBA,CAACjC,EAAOkC,KACzB,MAAM,WACJC,GACEnC,EACJ,MAAO,CAACkC,EAAOE,MAAOD,EAAWE,gBAAkBH,EAAOI,QAAQ,GAP9CP,EASrBlC,IAAA,IAAC,WACFsC,GACDtC,EAAA,OAAK0C,EAAAA,EAAAA,GAAS,CACbC,QAAS,OACTC,WAAY,SACZC,QAAS,IACPP,EAAWE,gBAAkB,CAC/B,gCAAiC,CAC/BM,WAAY,IAEd,IAgDF,EA/CiCC,EAAAA,YAAiB,SAAqBC,EAAS/C,GAC9E,MAAME,GAAQ8C,EAAAA,EAAAA,GAAgB,CAC5B9C,MAAO6C,EACPb,KAAM,oBAEF,eACFK,GAAiB,EAAK,UACtBhB,GACErB,EACJ+C,GAAQC,EAAAA,EAAAA,GAA8BhD,EAAO6B,GACzCM,GAAaI,EAAAA,EAAAA,GAAS,CAAC,EAAGvC,EAAO,CACrCqC,mBAEIY,EA3CkBd,KACxB,MAAM,QACJc,EAAO,eACPZ,GACEF,EACEe,EAAQ,CACZd,KAAM,CAAC,QAASC,GAAkB,YAEpC,OAAOc,EAAAA,EAAAA,GAAeD,EAAOzB,EAA4BwB,EAAQ,EAmCjDG,CAAkBjB,GAClC,OAAoBf,EAAAA,EAAAA,KAAKU,GAAiBS,EAAAA,EAAAA,GAAS,CACjDlB,WAAWgC,EAAAA,EAAAA,GAAKJ,EAAQb,KAAMf,GAC9Bc,WAAYA,EACZrC,IAAKA,GACJiD,GACL,I,2DC3DO,MASMO,EAAeC,GACH,kBAAVA,EAA2BA,EAC/BA,EAAMC,KAAK,M,mCCbtB,QAAuB,oBAAvB,EAA0D,4BAA1D,EAA6G,oCAA7G,EAAsK,kCAAtK,EAA+M,oBAA/M,EAAkP,4BAAlP,EAAqR,oBAArR,EAAiT,qBAAjT,EAAyV,gC,eCyBzV,MAAMC,EAAkB,UAElBC,EAAe,CACnBC,WAAY,CACVC,MAAO,aACPC,MAAO,WAETC,SAAU,CACRF,MAAO,WACPC,MAAO,YAIX,EAAejB,EAAAA,MAAW,KACxB,MAAM,UAAEmB,EAAS,WAAEC,EAAU,UAAEC,EAAS,SAAEC,EAAQ,kBAAEC,EAAiB,QAAEC,EAAO,KAAEhE,IAASiE,EAAAA,EAAAA,YACvFC,EAAAA,GAGIC,EAASL,EAASM,QACjBC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,CAAC,IACxCC,EAAAA,EAAAA,YAAU,KACR,IAAKL,EAAQ,OAEb,MAAMM,EAAW,GAkBjB,OAjBAN,EAAOO,SAAQC,IACb,MAAMC,EAAG,oCAAAC,OAAuCF,EAAK,UACrD,IAAIG,EAAO,GACX,MAAMC,EAAUC,IAAAA,IAAUJ,GAAKK,IAC7BA,EAASC,GAAG,QAAQC,IAClBL,GAAQK,CAAK,IAEfF,EAASC,GAAG,OAAO,KACjB,MAAME,EAAOC,KAAKC,MAAMR,GACxBR,GAAWiB,IACF,IAAKA,EAAU,CAACZ,GAAQS,KAC/B,GACF,IAEJX,EAASe,KAAKT,EAAQ,IAGjB,KACL,IAAK,MAAMA,KAAWN,EAAUM,EAAQU,OAAO,CAChD,GACA,CAACtB,IAGJ,MAAMuB,EAAa5B,EAAS6B,SACrBC,EAAaC,IAAkBtB,EAAAA,EAAAA,UAAS,CAAC,GAuDhD,IAAIuB,EACJ,IAvDAtB,EAAAA,EAAAA,YAAU,KACR,IAAKkB,EAAY,OAEjB,MAAMjB,EAAW,GA4CjB,OA3CAiB,EAAWhB,SAAQqB,IACjB,GAAyB,kBAAdA,EAAwB,OACnC,MAAMC,EAAa,gEAAAnB,OAAmEkB,EAAS,UAC/F,IAAIjB,EAAO,GACX,MAAMC,EAAUC,IAAAA,IAAUgB,GAAef,IACvCA,EAASC,GAAG,QAAQC,IAClBL,GAAQK,CAAK,IAEfF,EAASC,GAAG,OAAO,KAEjB,MAAMe,EAAaZ,KAAKC,MAAMR,GAExBM,EAAO,CAAC,EAERc,EAAUD,EAAWE,OAC3Bf,EAAKxD,KAAOsE,EAAOE,YAEnB,MAAMC,EAAmBvC,EAASwC,aAAexC,EAASwC,YAAYP,GAClEM,GAAoBA,IAAqBjB,EAAKxD,OAAMwD,EAAKxD,MAAI,KAAAiD,OAASwB,EAAgB,MAE1F,MAAME,EAAYL,EAAOM,UACnBC,EAAkBF,EAAUG,MAAKhH,GAA0B,WAAnBA,EAAIiH,aAClD,GAAIF,EAAiB,CACnBrB,EAAKwB,UAAYH,EAAgBI,IACjC,MAAMC,EAAeL,EAAgBI,IAAIE,MAAM,KAC/C3B,EAAK4B,SAAWF,EAAaA,EAAaG,OAAS,EACrD,CAEA,MAAMC,EAAoBX,EAAUG,MAAKhH,GAA0B,aAAnBA,EAAIiH,aACpD,GAAIO,EAAmB,CACrB9B,EAAK+B,YAAcD,EAAkBL,IACrC,MAAMO,EAAiBF,EAAkBL,IAAIE,MAAM,KACnD3B,EAAKiC,WAAaD,EAAeA,EAAeH,OAAS,EAC3D,CAEApB,GAAeN,IACN,IAAKA,EAAU,CAACQ,GAAYX,KACnC,GACF,IAEJX,EAASe,KAAKT,EAAQ,IAGjB,KACL,IAAK,MAAMA,KAAWN,EAAUM,EAAQU,OAAO,CAChD,GACA,CAACC,IAKA5B,GAAYA,EAASwD,SAAU,CAEjCxB,EAAWhC,EAASwD,SAASC,QAAQ,UAAW,MAEhD,MAAMC,EAAU,cACVC,EAAO,GACb,IAAIC,EACJ,KAAkD,OAA1CA,EAAMF,EAAQG,KAAK7D,EAASwD,YAClCG,EAAKjC,KAAKkC,EAAI,IAGhB,MAAME,EAAY9B,EAASiB,MAAM,aAE3Bc,EAAW,GACjB,IAAK,MAAMH,KAAOD,EAChBI,EAASrC,KAAKoC,EAAUF,IACxBG,EAASrC,MAAKxE,EAAAA,EAAAA,KAAA,OAAAG,SAAgBsG,EAAKC,IAAXA,IAE1BG,EAASrC,KAAKoC,EAAUA,EAAUX,OAAS,IAE3CnB,EAAW+B,CACb,CAEA,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA5G,SAAA,CACG2C,IACC9C,EAAAA,EAAAA,KAACD,EAAAA,EAAI,CAACE,UAAWC,EAAWC,UAC1B2G,EAAAA,EAAAA,MAACE,EAAAA,EAAW,CAAC/G,UAAWC,EAAsBC,SAAA,EAC5CH,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAYC,SAAE2C,EAASmE,MAAQ,YAC5CjE,EAAU,GAAKF,EAASoE,SAAUJ,EAAAA,EAAAA,MAAA,KAAG7G,UAAWC,EAAWC,SAAA,CAAC,IAAE2C,EAASoE,OAAO,QAC/EJ,EAAAA,EAAAA,MAAA,OAAK7G,UAAWC,EAAsBC,SAAA,CACnC2C,EAASqE,OACRnH,EAAAA,EAAAA,KAACoH,EAAAA,EAAI,CACH5E,MAAOF,EAAaQ,EAASqE,MAAM3E,MACnC6E,QAAQ,WACRnH,MAAO,CACLoH,gBAAiBhF,EAAaQ,EAASqE,MAAM1E,MAC7C8E,SAAU,MACVC,YAAa,SAEfvH,UAAWC,IAGd4C,EAAS2E,OACT3E,EAAS4E,cAAe1H,EAAAA,EAAAA,KAAA,OAAAG,SAAM2C,EAAS4E,cACvC5E,EAAS6E,UAAWb,EAAAA,EAAAA,MAAA,OAAA3G,SAAA,CAAK,aF5KTgC,EE4KmCW,EAAS6E,QF3KlD,kBAAVxF,EAA2BA,EACjB,IAAjBA,EAAM8D,OAAqB,GACV,IAAjB9D,EAAM8D,OAAqB9D,EAAM,GAC/B,GAAN0B,OAAU1B,EAAMyF,MAAM,EAAGzF,EAAM8D,OAAS,GAAG7D,KAAK,MAAK,SAAAyB,OAAQ1B,EAAMA,EAAM8D,OAAS,QEyKvEnD,EAAS+E,SAAUf,EAAAA,EAAAA,MAAA,OAAA3G,SAAA,CAAK,WAAS+B,EAAaY,EAAS+E,WAEvDC,EAAAA,GAAYC,QAAU/I,IAAQ8H,EAAAA,EAAAA,MAAA,OAAA3G,SAAA,CAAK,SAAO2H,EAAAA,GAAYE,iBAAiBhJ,IAASA,KAChF8D,EAASmF,UAAWnB,EAAAA,EAAAA,MAAA,OAAA3G,SAAA,CAAK,YAAU2C,EAASmF,WAC5CnF,EAASoF,UAAWpB,EAAAA,EAAAA,MAAA,OAAA3G,SAAA,CAAK,YAAU2C,EAASoF,WAC5CpF,EAASqF,UAAWrB,EAAAA,EAAAA,MAAA,OAAA3G,SAAA,CAAK,YAAU2C,EAASqF,WAC5CrF,EAASsF,OACRtF,EAASsF,MAAMC,KAAI,CAACC,EAAMC,KACxBzB,EAAAA,EAAAA,MAAA,OAAA3G,SAAA,CACGmI,EAAK1H,KAAK,IAAE,KACbZ,EAAAA,EAAAA,KAAA,KACEwI,KAAMF,EAAK1E,IACX6E,OAAO,SACPC,IAAI,sBAAqBvI,SAExBmI,EAAK1E,QAPA2E,KAWbzF,EAAS6F,UACR7F,EAAS6F,SAASN,KAAI,CAACO,EAASC,KAC9B/B,EAAAA,EAAAA,MAAA,OAAa5G,MAAO,CAAE4I,WAAY,QAAS3I,SAAA,EACzCH,EAAAA,EAAAA,KAAC+I,EAAAA,EAAe,CAACC,KAAMC,EAAAA,IAAuBC,KAAM,OACnD,IAAMN,EAAQO,UAFPN,aASrB9F,GAAqBA,EAAkBkD,OAAS,IAC/CjG,EAAAA,EAAAA,KAACD,EAAAA,EAAI,CAACE,UAAWC,EAAWC,UAC1B2G,EAAAA,EAAAA,MAACE,EAAAA,EAAW,CAAC/G,UAAWC,EAA8BC,SAAA,CACnD4C,EAAkBsF,KAAI,CAAC9C,EAAW6D,KACjCtC,EAAAA,EAAAA,MAAA,OAAA3G,SAAA,CACS,IAANiJ,IACCpJ,EAAAA,EAAAA,KAAA,MAAIE,MAAO,CAAEuC,MAAO,gBAEtBzC,EAAAA,EAAAA,KAACgH,EAAAA,EAAW,CAAC/G,UAAWC,EAA4BC,UAClDH,EAAAA,EAAAA,KAAA,OAAAG,UACE2G,EAAAA,EAAAA,MAAA,OAAK7G,UAAWC,EAAsBC,SAAA,EACpCH,EAAAA,EAAAA,KAACqJ,EAAAA,EAAU,CAAChC,QAAQ,KAAIlH,SAAEoF,EAAU3E,QACpCZ,EAAAA,EAAAA,KAAA,OAAAG,SAAMoF,EAAU+D,MAAI,SAAAzF,OAAa0B,EAAU+D,SAC3CtJ,EAAAA,EAAAA,KAAA,OAAAG,SACGoF,EAAUgE,UAAQ,aAAA1F,OACJ0B,EAAUgE,aAE3BzC,EAAAA,EAAAA,MAAA,OAAA3G,SAAA,CACGoF,EAAUiE,SAAO,gBAClBxJ,EAAAA,EAAAA,KAAA,KACEwI,KACE,qCACAjD,EAAUiE,QAEZf,OAAO,SACPC,IAAI,sBAAqBvI,SAExBoF,EAAUiE,sBAvBbJ,KA+BXK,OAAOC,QAAQrG,GAASgF,KAAI,CAAA5J,EAAuB2K,KAAO,IAA5BzF,EAAOgG,GAAYlL,EAEhD,IAAKkL,EAAa,MAAO,OAAShG,EAAQ,aAE1C,MAAMiG,EAAQD,EAAYE,SACpBC,EAAqBH,EAAYI,SAASC,cAC1CC,EAAc,IAAIC,KAAKP,EAAYQ,SACnCC,EAAW/K,MAAMC,KACrB,IAAI+K,KAAKV,EAAYW,QAAU,IAAIvE,MAAM1D,KAErCkI,EAAYlL,MAAMC,KACtB,IAAI+K,KAAKV,EAAYa,SAAW,IAAIzE,MAAM1D,KAC1CoI,QAAOlB,GAAYA,IAEfmB,EAAW/G,EAAMqG,cACjBW,EAAShH,GAAK,0CAAAE,OACwB6G,EAASE,OAAO,EAAG,GAAE,KAAA/G,OAAI6G,EAAQ,KAAA7G,OAAI6G,EAAQ,oBAEzF,OACE5D,EAAAA,EAAAA,MAAA,OAAA3G,SAAA,CACS,IAANiJ,IAAWpJ,EAAAA,EAAAA,KAAA,MAAIE,MAAO,CAAEuC,MAAO,gBAChCqE,EAAAA,EAAAA,MAACE,EAAAA,EAAW,CAAC9G,MAAO,CAAE2K,UAAW,KAAM1K,SAAA,EACrC2G,EAAAA,EAAAA,MAAA,OAAA3G,SAAA,EACEH,EAAAA,EAAAA,KAAC8K,EAAAA,EAAO,CACNC,IAAKJ,EACLK,MAAM,MACNC,OAAO,MACPC,QAAQ,OACRC,IAAG,kBAAAtH,OAAoBF,EAAK,iBAE9BmD,EAAAA,EAAAA,MAAA,OAAK7G,UAAWC,EAAsBC,SAAA,EACpC2G,EAAAA,EAAAA,MAAA,OAAA3G,SAAA,CAAK,kBACawD,EACfgG,EAAYyB,UAAQ,cAAAvH,OACL8F,EAAYyB,SAAQ,SAEtCpL,EAAAA,EAAAA,KAACqJ,EAAAA,EAAU,CAAChC,QAAQ,KAAIlH,SAAEyJ,KAC1B5J,EAAAA,EAAAA,KAAA,OAAAG,SACGwJ,EAAY0B,QACY,YAAvB1B,EAAY0B,QAAoB,WAAAxH,OACrB8F,EAAY0B,WAE3BvE,EAAAA,EAAAA,MAAA,OAAA3G,SAAA,CAAK,wBAAsB2J,MAC3BhD,EAAAA,EAAAA,MAAA,OAAA3G,SAAA,CAAK,WAEFoK,EAAUtE,OAAS,GAAK,IAAI,IAAE,IAC9BsE,EAAUtE,OAAS,EAAIsE,EAAUlC,KAAI,CAACkB,EAAU+B,KAC/CtL,EAAAA,EAAAA,KAACoH,EAAAA,EAAI,CAEH5E,MAAO+G,EACPlC,QAAQ,WACR5E,MAAM,UACNxC,UAAWC,GAJNoL,MAMJtL,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAcC,SAAC,sBAEvC2G,EAAAA,EAAAA,MAAA,OAAA3G,SAAA,CAAK,UAEFiK,EAASnE,OAAS,GAAK,IAAI,IAAE,IAC7BmE,EAAS/B,KAAI,CAACkD,EAASC,KACtBxL,EAAAA,EAAAA,KAACoH,EAAAA,EAAI,CAEH5E,MAAO+I,EACPlE,QAAQ,WACR5E,MAAM,UACNxC,UAAWC,GAJNsL,SAQX1E,EAAAA,EAAAA,MAAA,OAAA3G,SAAA,CAAK,oBACe,KAClBH,EAAAA,EAAAA,KAAA,QAAMyL,SAAUxB,EAAYyB,cAAcvL,SACvC8J,EAAY0B,2BAKrB7E,EAAAA,EAAAA,MAAC8E,EAAW,CAAAzL,SAAA,EACV2G,EAAAA,EAAAA,MAAC+E,EAAAA,EAAM,CACLzL,UAAW,IACXiH,QAAQ,YACRmB,KAAI,wCAAA3E,OAA0CF,GAC9CuF,KAAK,QACLzG,MAAM,UACNgG,OAAO,SACPC,IAAI,sBAAqBvI,SAAA,EAEzBH,EAAAA,EAAAA,KAAC+I,EAAAA,EAAe,CAACC,KAAM8C,EAAAA,MAAU,uBAGnChF,EAAAA,EAAAA,MAAC+E,EAAAA,EAAM,CACLzL,UAAW,IACXiH,QAAQ,YACRmB,KAAI,kCAAA3E,OAAoCF,GACxCuF,KAAK,QACLzG,MAAM,UACNgG,OAAO,SACPC,IAAI,sBAAqBvI,SAAA,EAEzBH,EAAAA,EAAAA,KAAC+I,EAAAA,EAAe,CAACC,KAAM8C,EAAAA,MAAU,uBAGnChF,EAAAA,EAAAA,MAAC+E,EAAAA,EAAM,CACLzL,UAAW,IACXiH,QAAQ,YACRmB,KAAI,8CAAA3E,OAAgDF,GACpDuF,KAAK,QACLzG,MAAM,UACNgG,OAAO,SACPC,IAAI,sBAAqBvI,SAAA,EAEzBH,EAAAA,EAAAA,KAAC+I,EAAAA,EAAe,CAACC,KAAM8C,EAAAA,MAAU,4BA5F/B1C,EAiGJ,SAMfK,OAAOsC,KAAKnH,GAAaqB,OAAS,IACjCjG,EAAAA,EAAAA,KAACD,EAAAA,EAAI,CAACE,UAAWC,EAAWC,UAC1BH,EAAAA,EAAAA,KAACgH,EAAAA,EAAW,CAAC/G,UAAWC,EAAsBC,SAC3CsJ,OAAOC,QAAQ9E,GAAayD,KAAI,CAAA2D,EAA2B5C,KAAC,IAA1BrE,EAAWkH,GAAYD,EAAA,OACxDlF,EAAAA,EAAAA,MAAA,OAAa7G,UAAWC,EAAsBC,SAAA,CACrC,IAANiJ,IACCpJ,EAAAA,EAAAA,KAAA,MAAIE,MAAO,CAAEuC,MAAO,gBAEtBzC,EAAAA,EAAAA,KAAC8K,EAAAA,EAAO,CACNC,IAAG,0DAAAlH,OAA4DkB,EAAS,QACxEiG,MAAM,MAAMC,OAAO,MAAMC,QAAQ,OACjCC,IAAG,kBAAAtH,OAAoBoI,EAAYrL,KAAI,cAEvCsL,YAAY,YAAYC,eAAe,cAGvClM,UAAWC,KAEbF,EAAAA,EAAAA,KAACqJ,EAAAA,EAAU,CAAChC,QAAQ,KAAIlH,SAAE8L,EAAYrL,QACtCkG,EAAAA,EAAAA,MAAA,OAAA3G,SAAA,iBAEEH,EAAAA,EAAAA,KAAA,KAAGwI,KAAI,6CAAA3E,OAA+CkB,GACpD0D,OAAO,SACPC,IAAI,sBAAqBvI,SAExB4E,OAGJkH,EAAYjG,WAAac,EAAAA,EAAAA,MAAA,OAAA3G,SAAA,gBAExBH,EAAAA,EAAAA,KAAA,KAAGwI,KAAMyD,EAAYrG,UACnB6C,OAAO,SACPC,IAAI,sBAAqBvI,SAExB8L,EAAYjG,cAGhBiG,EAAY5F,aAAeS,EAAAA,EAAAA,MAAA,OAAA3G,SAAA,kBAE1BH,EAAAA,EAAAA,KAAA,KAAGwI,KAAMyD,EAAY9F,YACnBsC,OAAO,SACPC,IAAI,sBAAqBvI,SAExB8L,EAAY5F,kBAvCT+C,EA0CJ,SAKdtC,EAAAA,EAAAA,MAAC/G,EAAAA,EAAI,CAACE,UAAWC,EAAWC,SAAA,EAC1B2G,EAAAA,EAAAA,MAACE,EAAAA,EAAW,CAAC/G,UAAWC,EAAsBC,SAAA,EAC5CH,EAAAA,EAAAA,KAACqJ,EAAAA,EAAU,CAAChC,QAAQ,KAAIlH,SAAC,aACzB2G,EAAAA,EAAAA,MAAA,OAAK7G,UAAWC,EAAsBC,SAAA,EACpCH,EAAAA,EAAAA,KAAA,OAAAG,SAAO2C,GAAYA,EAASsJ,SAAY,mBACxCpM,EAAAA,EAAAA,KAAA,KACEwI,KAAM1F,GAAYA,EAASuJ,UAC3B5D,OAAO,SACPC,IAAI,sBAAqBvI,SAExB2C,GAAYA,EAASuJ,WAAa,2BAIxCvH,IACCgC,EAAAA,EAAAA,MAACE,EAAAA,EAAW,CAAC/G,UAAWC,EAAsBC,SAAA,EAC5CH,EAAAA,EAAAA,KAACqJ,EAAAA,EAAU,CAAChC,QAAQ,KAAIlH,SAAC,cACzB2G,EAAAA,EAAAA,MAAA,OAAK7G,UAAWC,EAAsBC,SAAA,EACpCH,EAAAA,EAAAA,KAAA,OAAAG,SAAK,mKAKLH,EAAAA,EAAAA,KAAA,OAAAG,SAAM2E,UAIXhC,EAASwJ,SACRxF,EAAAA,EAAAA,MAACE,EAAAA,EAAW,CAAC/G,UAAWC,EAAsBC,SAAA,EAC5CH,EAAAA,EAAAA,KAACqJ,EAAAA,EAAU,CAAChC,QAAQ,KAAIlH,SAAC,sBACzBH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAsBC,UACpCH,EAAAA,EAAAA,KAAA,OAAAG,SAAM2C,EAASwJ,eAIrBxF,EAAAA,EAAAA,MAACE,EAAAA,EAAW,CAAC/G,UAAWC,EAAsBC,SAAA,EAC5CH,EAAAA,EAAAA,KAACqJ,EAAAA,EAAU,CAAChC,QAAQ,KAAIlH,SAAC,yBACzB2G,EAAAA,EAAAA,MAAA,OAAK7G,UAAWC,EAAsBC,SAAA,EACpC2G,EAAAA,EAAAA,MAAA,OAAA3G,SAAA,CAAK,6BACwBwC,IAAa3C,EAAAA,EAAAA,KAAA,QAAAG,SAAM,qBAEhD2G,EAAAA,EAAAA,MAAA,OAAA3G,SAAA,CAAK,gCAA8ByC,MACnCkE,EAAAA,EAAAA,MAAA,OAAA3G,SAAA,CAAK,WAAS0C,EAAY,YAAc,6BFrcrBV,KEycxB,G,kKC1cA,SAASoK,EAAoBjM,GAClC,OAAOC,EAAAA,EAAAA,IAAqB,UAAWD,EACzC,EACoBE,EAAAA,EAAAA,GAAuB,UAAW,CAAC,S,eCDvD,MAAMC,EAAY,CAAC,YAAa,UAoB1B+L,GAAW7L,EAAAA,EAAAA,IAAO8L,EAAAA,EAAO,CAC7B7L,KAAM,UACNN,KAAM,OACNO,kBAAmBA,CAACjC,EAAOkC,IAAWA,EAAOE,MAH9BL,EAId,KACM,CACL+L,SAAU,aAwDd,EArD0BlL,EAAAA,YAAiB,SAAcC,EAAS/C,GAChE,MAAME,GAAQ8C,EAAAA,EAAAA,GAAgB,CAC5B9C,MAAO6C,EACPb,KAAM,aAEF,UACFX,EAAS,OACT0M,GAAS,GACP/N,EACJ+C,GAAQC,EAAAA,EAAAA,GAA8BhD,EAAO6B,GACzCM,GAAaI,EAAAA,EAAAA,GAAS,CAAC,EAAGvC,EAAO,CACrC+N,WAEI9K,EA/BkBd,KACxB,MAAM,QACJc,GACEd,EAIJ,OAAOgB,EAAAA,EAAAA,GAHO,CACZf,KAAM,CAAC,SAEoBuL,EAAqB1K,EAAQ,EAwB1CG,CAAkBjB,GAClC,OAAoBf,EAAAA,EAAAA,KAAKwM,GAAUrL,EAAAA,EAAAA,GAAS,CAC1ClB,WAAWgC,EAAAA,EAAAA,GAAKJ,EAAQb,KAAMf,GAC9B2M,UAAWD,EAAS,OAAIE,EACxBnO,IAAKA,EACLqC,WAAYA,GACXY,GACL,G,uJCnDO,SAASmL,EAA2BxM,GACzC,OAAOC,EAAAA,EAAAA,IAAqB,iBAAkBD,EAChD,EAC2BE,EAAAA,EAAAA,GAAuB,iBAAkB,CAAC,S,eCDrE,MAAMC,EAAY,CAAC,YAAa,aAkB1BsM,GAAkBpM,EAAAA,EAAAA,IAAO,MAAO,CACpCC,KAAM,iBACNN,KAAM,OACNO,kBAAmBA,CAACjC,EAAOkC,IAAWA,EAAOE,MAHvBL,EAIrB,KACM,CACLW,QAAS,GACT,eAAgB,CACd0L,cAAe,QAoDrB,EAhDiCxL,EAAAA,YAAiB,SAAqBC,EAAS/C,GAC9E,MAAME,GAAQ8C,EAAAA,EAAAA,GAAgB,CAC5B9C,MAAO6C,EACPb,KAAM,oBAEF,UACFX,EAAS,UACTG,EAAY,OACVxB,EACJ+C,GAAQC,EAAAA,EAAAA,GAA8BhD,EAAO6B,GACzCM,GAAaI,EAAAA,EAAAA,GAAS,CAAC,EAAGvC,EAAO,CACrCwB,cAEIyB,EAlCkBd,KACxB,MAAM,QACJc,GACEd,EAIJ,OAAOgB,EAAAA,EAAAA,GAHO,CACZf,KAAM,CAAC,SAEoB8L,EAA4BjL,EAAQ,EA2BjDG,CAAkBjB,GAClC,OAAoBf,EAAAA,EAAAA,KAAK+M,GAAiB5L,EAAAA,EAAAA,GAAS,CACjD8L,GAAI7M,EACJH,WAAWgC,EAAAA,EAAAA,GAAKJ,EAAQb,KAAMf,GAC9Bc,WAAYA,EACZrC,IAAKA,GACJiD,GACL,G","sources":["webpack://mdposit/./src/components/animated-card/style.module.css?d4d9","components/animated-card/index.js","../node_modules/@mui/material/CardActions/cardActionsClasses.js","../node_modules/@mui/material/CardActions/CardActions.js","utils/pretty-enumerate/index.js","webpack://mdposit/./src/pages/accession/overview/style.module.css?45c5","pages/accession/overview/index.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__M9GCG\"};","import React, { useLayoutEffect, useRef, forwardRef } from 'react';\nimport { Card } from '@mui/material';\n\nimport reducedMotion from '../../utils/reduced-motion';\n\nimport style from './style.module.css';\n\nconst KEYFRAMES = { opacity: [0, 1] };\n\nif (!reducedMotion()) {\n  KEYFRAMES.transform = ['translateY(50px)', 'translateY(0)'];\n}\n\nconst ANIMATION_OPTIONS = {\n  fill: 'both',\n  easing: 'cubic-bezier(0, .99, .56, 1.1)',\n  duration: 500,\n};\n\n// Make the card appear and slide softly from down to up when the page is loaded\nconst AnimatedCard = forwardRef(({ overrideComponent, ...props }, ref) => {\n  const containerRef = useRef(null);\n\n  useLayoutEffect(() => {\n    const node = containerRef.current && containerRef.current.firstElementChild;\n    if (!(node && node.animate)) return;\n\n    const index = Array.from(\n      document.querySelectorAll('main section'),\n    ).findIndex(section => node === section);\n\n    const animation = node.animate(KEYFRAMES, {\n      ...ANIMATION_OPTIONS,\n      delay: index * 150,\n    });\n\n    return () => animation.cancel();\n  }, []);\n\n  const Component = overrideComponent ? 'section' : Card;\n\n  return (\n    <div ref={containerRef} className={style.container}>\n      <Component component=\"section\" {...props} ref={ref} />\n    </div>\n  );\n});\n\nexport default AnimatedCard;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(style) ~ :not(style)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n      disableSpacing = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","// Given an array of strings, return a single string with the follwoing format:\n// e.g. ['red', 'green', 'blue'] => 'red, green and blue'\n// Handle when the values is a string instead of an array (old values)\nexport const prettyEnumerate = array => {\n    if (typeof array === 'string') return array;\n    if (array.length === 0) return '';\n    if (array.length === 1) return array[0];\n    return `${array.slice(0, array.length - 1).join(', ')} and ${array[array.length - 1]}`;\n}\n\n// Just separte values by semicolons\n// Handle when the values is a string instead of an array (old values)\nexport const rawEnumerate = array => {\n    if (typeof array === 'string') return array;\n    return array.join('; ');\n}","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"style_card__9TULw\",\"card-content\":\"style_card-content__u-RUX\",\"horizontal-marginned\":\"style_horizontal-marginned__F1cTH\",\"vertcial-marginned\":\"style_vertcial-marginned__AFi23\",\"chip\":\"style_chip__LmEJP\",\"summary-list\":\"style_summary-list__5sQf1\",\"grey\":\"style_grey__aJ5pz\",\"title\":\"style_title__N2SOZ\",\"white-background\":\"style_white-background__KCBRe\"};","import React, { useContext, useState, useEffect } from 'react';\nimport {\n  CardContent,\n  CardActions,\n  Button,\n  Typography,\n  Chip,\n} from '@mui/material';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faLink,\n  faExclamationTriangle,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport Card from '../../../components/animated-card';\nimport LazyImg from '../../../components/lazy-img';\n\nimport { prettyEnumerate, rawEnumerate } from '../../../utils/pretty-enumerate';\n\nimport { ProjectCtx } from '../../../contexts';\nimport https from 'https-browserify';\n\nimport style from './style.module.css';\n\nimport { HOST_CONFIG } from '../../../utils/constants';\n\nconst COMMA_SEPARATOR = /\\s*,\\s*/;\n\nconst typeSettings = {\n  trajectory: {\n    label: 'Trajectory',\n    color: '#8ffffd', // light blue\n  },\n  ensemble: {\n    label: 'Ensemble',\n    color: '#ffe08f', // light yellow\n  },\n};\n\nexport default React.memo(() => {\n  const { accession, identifier, published, metadata, proteinReferences, mdCount, node } = useContext(\n    ProjectCtx,\n  );\n  // Download pdb information for every pdb id in metadata\n  const pdbIds = metadata.PDBIDS;\n  const [pdbInfo, setPdbInfo] = useState({});\n  useEffect(() => {\n    if (!pdbIds) return;\n    // Store requests so we can abort them all in the useEffect cleanup function in case they were not completed on time\n    const requests = [];\n    pdbIds.forEach(pdbId => {\n      const url = `https://mdb-login.bsc.es/api/pdb/${pdbId}/entry`;\n      let body = '';\n      const request = https.get(url, response => {\n        response.on('data', chunk => {\n          body += chunk;\n        });\n        response.on('end', () => {\n          const data = JSON.parse(body);\n          setPdbInfo(previous => {\n            return { ...previous, [pdbId]: data };\n          });\n        });\n      });\n      requests.push(request);\n    });\n    // DANI: No he comprovado que esto funcione debidamente\n    return () => {\n      for (const request of requests) request.abort();\n    };\n  }, [pdbIds]);\n\n  // Download ligand information for every ligand pubchem id in metadata\n  const pubchemIds = metadata.LIGANDS;\n  const [pubchemInfo, setPubchemInfo] = useState({});\n  useEffect(() => {\n    if (!pubchemIds) return;\n    // Store requests so we can abort them all in the useEffect cleanup function in case they were not completed on time\n    const requests = [];\n    pubchemIds.forEach(pubchemId => {\n      if (typeof pubchemId !== 'string') return;\n      const pubchemAPIurl = `https://pubchem.ncbi.nlm.nih.gov/rest/pug_view/data/compound/${pubchemId}/JSON/`;\n      let body = '';\n      const request = https.get(pubchemAPIurl, response => {\n        response.on('data', chunk => {\n          body += chunk;\n        });\n        response.on('end', () => {\n          // Get the original API response data\n          const sourceData = JSON.parse(body);\n          // Mine all data we want to display\n          const data = {};\n          // First get the ligand name\n          const record =  sourceData.Record;\n          data.name = record.RecordTitle;\n          // If there is a forced name then use add it to the name\n          const forcedLigandName = metadata.LIGANDNAMES && metadata.LIGANDNAMES[pubchemId];\n          if (forcedLigandName && forcedLigandName !== data.name) data.name += ` (${forcedLigandName})`;\n          // Get chembl id and url\n          const reference = record.Reference;\n          const chemblReference = reference.find(ref => ref.SourceName === 'ChEMBL');\n          if (chemblReference) {\n            data.chemblURL = chemblReference.URL;\n            const chemblSplits = chemblReference.URL.split('/');\n            data.chemblID = chemblSplits[chemblSplits.length - 2];\n          }\n          // Get drugbank id and url\n          const drugbankReference = reference.find(ref => ref.SourceName === 'DrugBank');\n          if (drugbankReference) {\n            data.drugbankURL = drugbankReference.URL;\n            const drugbankSplits = drugbankReference.URL.split('/');\n            data.drugbankID = drugbankSplits[drugbankSplits.length - 1];\n          }\n          // Add current ligand data to the overall ligands data object\n          setPubchemInfo(previous => {\n            return { ...previous, [pubchemId]: data };\n          });\n        });\n      });\n      requests.push(request);\n    });\n    // DANI: No he comprovado que esto funcione debidamente\n    return () => {\n      for (const request of requests) request.abort();\n    };\n  }, [pubchemIds]);\n\n  // Parse the citation text\n  // i.e. add break lines, \"elevated\" text, etc.\n  let citation;\n  if (metadata && metadata.CITATION) {\n    // Replace the metadat break lines by proper JSX break lines\n    citation = metadata.CITATION.replace(/\\(br\\)/g, '\\n');\n    // Get all sup characters\n    const pattern = /\\^([\\S\\s])/g;\n    const sups = [];\n    let sup;\n    while ((sup = pattern.exec(metadata.CITATION)) != null) {\n      sups.push(sup[1]);\n    }\n    // Split the citation by 'sups' and remove them\n    const fragments = citation.split(/\\^[\\S\\s]/g);\n    // Foreach sup, join the previous fragment with it\n    const compiled = [];\n    for (const sup in sups) {\n      compiled.push(fragments[sup]);\n      compiled.push(<sup key={sup}>{sups[sup]}</sup>);\n    }\n    compiled.push(fragments[fragments.length - 1]);\n    // Finally, join everything into a single string\n    citation = compiled;\n  }\n\n  return (\n    <>\n      {metadata && (\n        <Card className={style.card}>\n          <CardContent className={style['card-content']}>\n            <a className={style.title}>{metadata.NAME || 'Unnamed'}</a>\n            {mdCount > 1 && metadata.mdName && <a className={style.grey}>({metadata.mdName})</a>}\n            <div className={style['summary-list']}>\n              {metadata.TYPE && (\n                <Chip\n                  label={typeSettings[metadata.TYPE].label}\n                  variant=\"outlined\"\n                  style={{\n                    backgroundColor: typeSettings[metadata.TYPE].color,\n                    fontSize: '1em',\n                    marginRight: '0.8em',\n                  }}\n                  className={style.chip}\n                />\n              )}\n              {metadata.METHOD}\n              {metadata.DESCRIPTION && <div>{metadata.DESCRIPTION}</div>}\n              {metadata.AUTHORS && <div>Authors: {prettyEnumerate(metadata.AUTHORS)}</div>}\n              {metadata.GROUPS && <div>Groups: {rawEnumerate(metadata.GROUPS)}</div>}\n              {/* Node will exist only in the global API, and the global client has nodes as options */}\n              {HOST_CONFIG.global && node && <div>Node: {HOST_CONFIG.optionsNiceNames[node] || node}</div>}\n              {metadata.CONTACT && <div>Contact: {metadata.CONTACT}</div>}\n              {metadata.PROGRAM && <div>Program: {metadata.PROGRAM}</div>}\n              {metadata.VERSION && <div>Version: {metadata.VERSION}</div>}\n              {metadata.LINKS &&\n                metadata.LINKS.map((link, l) => (\n                  <div key={l}>\n                    {link.name}:{' '}\n                    <a\n                      href={link.url}\n                      target=\"_blank\"\n                      rel=\"noreferrer noopener\"\n                    >\n                      {link.url}\n                    </a>\n                  </div>\n                ))}\n              {metadata.WARNINGS &&\n                metadata.WARNINGS.map((warning, w) => (\n                  <div key={w} style={{ fontWeight: 'bold' }}>\n                    <FontAwesomeIcon icon={faExclamationTriangle} size={'lg'} />\n                    {' ' + warning.message}\n                  </div>\n                ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n      {proteinReferences && proteinReferences.length > 0 && (\n        <Card className={style.card}>\n          <CardContent className={style['horizontal-marginned']}>\n            {proteinReferences.map((reference, i) => (\n              <div key={i}>\n                {i !== 0 && (\n                  <hr style={{ color: 'lightGrey' }} />\n                ) /* An horizontal line to separate references */}\n                <CardContent className={style['vertcial-marginned']}>\n                  <div>\n                    <div className={style['summary-list']}>\n                      <Typography variant=\"h6\">{reference.name}</Typography>\n                      <div>{reference.gene && `Gene: ${reference.gene}`}</div>\n                      <div>\n                        {reference.organism &&\n                          `Organism: ${reference.organism}`}\n                      </div>\n                      <div>\n                        {reference.uniprot && `UniProt ID: `}\n                        <a\n                          href={\n                            'https://www.uniprot.org/uniprotkb/' +\n                            reference.uniprot\n                          }\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          {reference.uniprot}\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </div>\n            ))}\n            {Object.entries(pdbInfo).map(([pdbId, pdbMetadata], i) => {\n              //const pdbId = pdb && pdb._id && pdb._id.toLowerCase();\n              if (!pdbMetadata) return 'PDB ' + pdbId + ' not found';\n              // Mine pdb info\n              const title = pdbMetadata.compound;\n              const experimentalMethod = pdbMetadata.expClass.toLowerCase();\n              const publishDate = new Date(pdbMetadata.ascDate);\n              const keywords = Array.from(\n                new Set((pdbMetadata.header || '').split(COMMA_SEPARATOR)),\n              );\n              const organisms = Array.from(\n                new Set((pdbMetadata.sources || '').split(COMMA_SEPARATOR)),\n              ).filter(organism => organism); // Remove empty organism strings\n              // Set the url to get the pdb image\n              const lowerPdb = pdbId.toLowerCase();\n              const imgSrc = pdbId &&\n                `https://cdn.rcsb.org/images/structures/${lowerPdb.substr(1, 2)}/${lowerPdb}/${lowerPdb}_assembly-1.jpeg`;\n\n              return (\n                <div key={i}>\n                  {i !== 0 && <hr style={{ color: 'lightGrey' }} />}\n                  <CardContent style={{ minHeight: 380 }}>\n                    <div>\n                      <LazyImg\n                        src={imgSrc}\n                        width=\"350\"\n                        height=\"350\"\n                        loading=\"lazy\"\n                        alt={`3D view of the ${pdbId} structure`}\n                      />\n                      <div className={style['summary-list']}>\n                        <div>\n                          PDB Accession: {pdbId}\n                          {pdbMetadata.replaces &&\n                            ` (replaces ${pdbMetadata.replaces})`}\n                        </div>\n                        <Typography variant=\"h6\">{title}</Typography>\n                        <div>\n                          {pdbMetadata.status &&\n                            pdbMetadata.status !== 'CURRENT' &&\n                            `Status: ${pdbMetadata.status}`}\n                        </div>\n                        <div>Experimental method: {experimentalMethod}</div>\n                        <div>\n                          Organism\n                          {organisms.length > 1 && 's'}:{' '}\n                          {organisms.length > 0 ? organisms.map((organism, o) => (\n                            <Chip\n                              key={o}\n                              label={organism}\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              className={style.chip}\n                            />\n                          )) : <span className={style['grey']}>not available</span>}\n                        </div>\n                        <div>\n                          Keyword\n                          {keywords.length > 1 && 's'}:{' '}\n                          {keywords.map((keyword, k) => (\n                            <Chip\n                              key={k}\n                              label={keyword}\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              className={style.chip}\n                            />\n                          ))}\n                        </div>\n                        <div>\n                          Publication date:{' '}\n                          <time dateTime={publishDate.toISOString()}>\n                            {publishDate.toDateString()}\n                          </time>\n                        </div>\n                      </div>\n                    </div>\n                    <CardActions>\n                      <Button\n                        component={'a'}\n                        variant=\"contained\"\n                        href={`https://www.ebi.ac.uk/pdbe/entry/pdb/${pdbId}`}\n                        size=\"small\"\n                        color=\"primary\"\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                      >\n                        <FontAwesomeIcon icon={faLink} />\n                        &nbsp;PDBe website\n                      </Button>\n                      <Button\n                        component={'a'}\n                        variant=\"contained\"\n                        href={`https://www.rcsb.org/structure/${pdbId}`}\n                        size=\"small\"\n                        color=\"primary\"\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                      >\n                        <FontAwesomeIcon icon={faLink} />\n                        &nbsp;RCSB website\n                      </Button>\n                      <Button\n                        component={'a'}\n                        variant=\"contained\"\n                        href={`https://3dbionotes-ws.cnb.csic.es/?queryId=${pdbId}`}\n                        size=\"small\"\n                        color=\"primary\"\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                      >\n                        <FontAwesomeIcon icon={faLink} />\n                        &nbsp;3DBIONOTES\n                      </Button>\n                    </CardActions>\n                  </CardContent>\n                </div>\n              );\n            })}\n          </CardContent>\n        </Card>\n      )}\n      {Object.keys(pubchemInfo).length > 0 &&\n        <Card className={style.card}>\n          <CardContent className={style['card-content']}>\n            {Object.entries(pubchemInfo).map(([pubchemId, pubchemData], i) => (\n              <div key={i} className={style['summary-list']}>\n                {i !== 0 && (\n                  <hr style={{ color: 'lightGrey' }} />\n                ) /* An horizontal line to separate protein references */}\n                <LazyImg\n                  src={`https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=${pubchemId}&t=l`}\n                  width=\"200\" height=\"200\" loading=\"lazy\"\n                  alt={`3D view of the ${pubchemData.name} structure`}\n                  // cross origin and referrer policy should prevent pubchem cookies\n                  crossOrigin=\"anonymous\" referrerPolicy=\"no-referrer\"\n                  // default background color is like a \"broken\" white but this CSS trick fixes it\n                  // this was recommended by people from pubchem\n                  className={style['white-background']}\n                />\n                <Typography variant=\"h6\">{pubchemData.name}</Typography>\n                <div>\n                  {`Pubchem ID: `}\n                  <a href={`https://pubchem.ncbi.nlm.nih.gov/compound/${pubchemId}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {pubchemId}\n                  </a>\n                </div>\n                {pubchemData.chemblID && (<div>\n                  {`ChEMBL ID: `}\n                  <a href={pubchemData.chemblURL}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {pubchemData.chemblID}\n                  </a>\n                </div>)}\n                {pubchemData.drugbankID && (<div>\n                  {`DrugBank ID: `}\n                  <a href={pubchemData.drugbankURL}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {pubchemData.drugbankID}\n                  </a>\n                </div>)}\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n      }\n      <Card className={style.card}>\n        <CardContent className={style['card-content']}>\n          <Typography variant=\"h6\">License</Typography>\n          <div className={style['summary-list']}>\n            <div>{(metadata && metadata.LICENSE) || 'Not available'}</div>\n            <a\n              href={metadata && metadata.LINKCENSE}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {metadata && metadata.LINKCENSE && 'More information'}\n            </a>\n          </div>\n        </CardContent>\n        {citation && (\n          <CardContent className={style['card-content']}>\n            <Typography variant=\"h6\">Citation</Typography>\n            <div className={style['summary-list']}>\n              <div>\n                The use of any trajectory data in any reports or publications of\n                results obtained with the trajectory data should be acknowledged\n                by including a citation to:\n              </div>\n              <div>{citation}</div>\n            </div>\n          </CardContent>\n        )}\n        {metadata.THANKS && (\n          <CardContent className={style['card-content']}>\n            <Typography variant=\"h6\">Acknowledgements</Typography>\n            <div className={style['summary-list']}>\n              <div>{metadata.THANKS}</div>\n            </div>\n          </CardContent>\n        )}\n        <CardContent className={style['card-content']}>\n          <Typography variant=\"h6\">Project information</Typography>\n          <div className={style['summary-list']}>\n            <div>\n              Public project accession: {accession || <code>not assigned</code>}\n            </div>\n            <div>Internal project identifier: {identifier}</div>\n            <div>Status: {published ? 'published' : 'unpublished'}</div>\n          </div>\n        </CardContent>\n      </Card>\n    </>\n  );\n});\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;"],"names":["KEYFRAMES","opacity","reducedMotion","transform","ANIMATION_OPTIONS","fill","easing","duration","forwardRef","_ref","ref","overrideComponent","props","containerRef","useRef","useLayoutEffect","node","current","firstElementChild","animate","index","Array","from","document","querySelectorAll","findIndex","section","animation","delay","cancel","Component","Card","_jsx","className","style","children","component","getCardActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionsRoot","styled","name","overridesResolver","styles","ownerState","root","disableSpacing","spacing","_extends","display","alignItems","padding","marginLeft","React","inProps","useDefaultProps","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","clsx","rawEnumerate","array","join","COMMA_SEPARATOR","typeSettings","trajectory","label","color","ensemble","accession","identifier","published","metadata","proteinReferences","mdCount","useContext","ProjectCtx","pdbIds","PDBIDS","pdbInfo","setPdbInfo","useState","useEffect","requests","forEach","pdbId","url","concat","body","request","https","response","on","chunk","data","JSON","parse","previous","push","abort","pubchemIds","LIGANDS","pubchemInfo","setPubchemInfo","citation","pubchemId","pubchemAPIurl","sourceData","record","Record","RecordTitle","forcedLigandName","LIGANDNAMES","reference","Reference","chemblReference","find","SourceName","chemblURL","URL","chemblSplits","split","chemblID","length","drugbankReference","drugbankURL","drugbankSplits","drugbankID","CITATION","replace","pattern","sups","sup","exec","fragments","compiled","_jsxs","_Fragment","CardContent","NAME","mdName","TYPE","Chip","variant","backgroundColor","fontSize","marginRight","METHOD","DESCRIPTION","AUTHORS","slice","GROUPS","HOST_CONFIG","global","optionsNiceNames","CONTACT","PROGRAM","VERSION","LINKS","map","link","l","href","target","rel","WARNINGS","warning","w","fontWeight","FontAwesomeIcon","icon","faExclamationTriangle","size","message","i","Typography","gene","organism","uniprot","Object","entries","pdbMetadata","title","compound","experimentalMethod","expClass","toLowerCase","publishDate","Date","ascDate","keywords","Set","header","organisms","sources","filter","lowerPdb","imgSrc","substr","minHeight","LazyImg","src","width","height","loading","alt","replaces","status","o","keyword","k","dateTime","toISOString","toDateString","CardActions","Button","faLink","keys","_ref2","pubchemData","crossOrigin","referrerPolicy","LICENSE","LINKCENSE","THANKS","getCardUtilityClass","CardRoot","Paper","overflow","raised","elevation","undefined","getCardContentUtilityClass","CardContentRoot","paddingBottom","as"],"sourceRoot":""}