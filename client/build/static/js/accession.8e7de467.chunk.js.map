{"version":3,"file":"static/js/accession.8e7de467.chunk.js","mappings":"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","sources":["webpack://mdposit/./src/components/info/style.module.css?e5b4","components/info/index.js","webpack://mdposit/./src/pages/accession/style.module.css?47b8","pages/accession/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"default\":\"style_default__DjLzc\"};","import React, { useState, forwardRef } from 'react';\n\nimport { IconButton, Tooltip, ClickAwayListener } from '@mui/material';\nimport { tooltipClasses } from '@mui/material/Tooltip';\nimport { styled } from '@mui/material/styles';\n//import { makeStyles } from '@mui/styles';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport style from './style.module.css';\n\n// WARNING: Some styling parameters has no effect through the classic css way\n// They must be declared this way\n// The forwardRef and passing the ref to the tooltip is necessary for this to work since React 18 / Material UI v5\n// Here is explained why: https://mui.com/material-ui/guides/composition/#caveat-with-refs\nconst CustomTooltip = styled(\n  forwardRef(({ className, ...props }, ref) => {\n    return <Tooltip {...props} classes={{ popper: className }} ref={ref} />;\n  }),\n)(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    fontSize: '1em',\n    maxWidth: '100%',\n    margin: '0',\n  },\n}));\n\nconst Info = ({\n  // Message to be displayed when the mouse is over the info icon\n  tooltip,\n  // Set a custom styling\n  className,\n}) => {\n  const [open, setOpen] = useState(false);\n\n  const toogleOpen = () => setOpen(previous => !previous);\n  const closeIt = () => setOpen(false);\n\n  // Render\n  return (\n    <ClickAwayListener onClickAway={closeIt}>\n      <CustomTooltip\n        title={tooltip}\n        disableFocusListener\n        disableHoverListener\n        disableTouchListener\n        open={open}\n      >\n        <IconButton\n          className={className || style.default}\n          color={open ? 'info' : 'primary'}\n          onClick={toogleOpen}\n        >\n          <FontAwesomeIcon icon={faInfoCircle} size={'lg'} />\n        </IconButton>\n      </CustomTooltip>\n    </ClickAwayListener>\n  );\n};\n\nexport default Info;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__dFMTv\",\"title\":\"style_title__uoSaZ\",\"link-to-api\":\"style_link-to-api__FRbDu\",\"info\":\"style_info__2dDtu\",\"selector\":\"style_selector__XaqWz\"};","// React logic\nimport React, { lazy, Suspense, useContext, useMemo, useState } from 'react';\nimport { Link, Routes, Route, useLocation, useParams, useNavigate } from 'react-router-dom';\n\n// Visual assets\nimport { Typography, Button, Select, MenuItem } from '@mui/material';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLink, faBook } from '@fortawesome/free-solid-svg-icons';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\n\n// Hooks\nimport useAPI from '../../hooks/use-api'; // API acces\nimport useNGLFile from '../../hooks/use-ngl-file';\n\n// Additional components\nimport ErrorBoundary from '../../components/error-boundary'; // Catch errors in React components\nimport Loading from '../../components/loading'; // Displays an animated \"loading\" circle\nimport Info from '../../components/info';\n\nimport { docs } from '../help/documentation';\n\n// Load the 3 contexts\nimport { ProjectCtx, PdbCtx } from '../../contexts';\n\n// Load the project class\nimport { Project } from '../../utils/project-manager';\n\n// Constants\nimport {\n  BASE_PATH,\n  BASE_PATH_PROJECTS,\n  MAIN_STRUCTURE_FILENAME,\n  NICE_NAMES,\n} from '../../utils/constants';\n\n// CSS styles\nimport style from './style.module.css';\n\nconst ProjectMenu = lazy(() =>\n  import(\n    /* webpackChunkName: 'project-menu' */ '../../components/menu/project-menu'\n  ),\n);\n\nconst Overview = lazy(() =>\n  import(/* webpackChunkName: 'overview' */ './overview'),\n);\nconst Files = lazy(() => import(/* webpackChunkName: 'files' */ './files'));\nconst Trajectory = lazy(() =>\n  import(/* webpackChunkName: 'trajectory' */ './trajectory'),\n);\nconst Rmsds = lazy(() => import(/* webpackChunkName: 'rmsds' */ './rmsds'));\nconst Rgyr = lazy(() => import(/* webpackChunkName: 'rgyr' */ './rgyr'));\nconst Fluctuation = lazy(() =>\n  import(/* webpackChunkName: 'fluctuation' */ './fluctuation'),\n);\nconst PCA = lazy(() => import(/* webpackChunkName: 'pca' */ './pca'));\nconst RmsdPerres = lazy(() =>\n  import(/* webpackChunkName: 'rmsd-perres' */ './rmsd-perres'),\n);\n\nconst Electrostatic = lazy(() =>\n  import(/* webpackChunkName: 'electrostatic' */ './electrostatic'),\n);\n\nconst DistPerres = lazy(() =>\n  import(/* webpackChunkName: 'dist-perres' */ './dist-perres'),\n);\n\nconst RmsdPairwise = lazy(() =>\n  import(/* webpackChunkName: 'rmsd-pairwise' */ './rmsd-pairwise'),\n);\n\nconst Hbonds = lazy(() => import(/* webpackChunkName: 'hbonds' */ './hbonds'));\n\nconst Energies = lazy(() =>\n  import(/* webpackChunkName: 'energies' */ './energies'),\n);\n\nconst Pockets = lazy(() =>\n  import(/* webpackChunkName: 'pockets' */ './pockets'),\n);\n\nconst Mutations = lazy(() =>\n  import(/* webpackChunkName: 'mutations' */ './mutations'),\n);\n\nconst Epitopes = lazy(() =>\n  import(/* webpackChunkName: 'epitopes' */ './epitopes'),\n);\n\nconst Sasa = lazy(() => import(/* webpackChunkName: 'sasa' */ './sasa'));\n\nconst JsonViewer = lazy(() =>\n  import(/* webpackChunkName: 'json' */ './json-viewer'),\n);\n\nconst Populations = lazy(() =>\n  import(/* webpackChunkName: 'mutations' */ './populations'),\n);\n\nconst MarkovGraph = lazy(() =>\n  import(/* webpackChunkName: 'markov' */ './markov'),\n);\n\n// Put subpage name and page component together\nconst pageComponents = {\n  overview: Overview,\n  trajectory: Trajectory,\n  electrostatic: Electrostatic,\n  rgyr: Rgyr,\n  rmsds: Rmsds,\n  'rmsd-perres': RmsdPerres,\n  'rmsd-pairwise': RmsdPairwise,\n  pca: PCA,\n  fluctuation: Fluctuation,\n  sasa: Sasa,\n  'dist-perres': DistPerres,\n  hbonds: Hbonds,\n  energies: Energies,\n  pockets: Pockets,\n  mutations: Mutations,\n  epitopes: Epitopes,\n  populations: Populations,\n  markov: MarkovGraph,\n  files: Files,\n};\n\nconst getDataURL = (accessionAndMdNumber, subPage) => {\n  // First, few modifications muts be done over the client URL path to be compatible with the API\n  let end;\n  switch (subPage) {\n    case 'overview':\n    case 'trajectory':\n      end = '';\n      break;\n    case 'electrostatic':\n      end = 'analyses/interactions';\n      break;\n    case 'rgyr':\n    case 'rmsds':\n    case 'rmsd-perres':\n    case 'rmsd-pairwise':\n    case 'pca':\n    case 'fluctuation':\n    case 'sasa':\n    case 'dist-perres':\n    case 'hbonds':\n    case 'energies':\n    case 'pockets':\n    case 'markov':\n      end = `analyses/${subPage}`;\n      break;\n    case 'files':\n      end = subPage;\n      break;\n    case 'mutations':\n    case 'epitopes':\n      end = 'references';\n      break;\n    case 'populations':\n      end = `files/populations.json`;\n      break;\n    default:\n      return null; // No button is rendered\n  }\n  return `${BASE_PATH}current/projects/${accessionAndMdNumber}/${end}`;\n};\n\n// Render the accession summary\nconst SummarySwitch = ({ subPage, dataUrl }) => {\n  // Load the project context\n  const project = useContext(ProjectCtx);\n  // Find the first valid structure filename found in the project\n  // Load the structure data from the API\n  const pdbData = useNGLFile(\n    `${BASE_PATH_PROJECTS}/${project.accessionAndMdNumber}/files/${MAIN_STRUCTURE_FILENAME}`,\n    // This attribute was included before: defaultRepresentation: false\n    { defaultRepresentation: false, ext: 'pdb' },\n  );\n  // Wait for the pdbData to arrive\n  if (pdbData.loading) return <Loading />;\n  else if (pdbData.error) return pdbData.error.toString() + ' (in pdbData)';\n  else if (!pdbData.file) return 'Something bad happened with the pdb data';\n\n  // Get the component to be rendered according to the subpage name\n  const Component = pageComponents[subPage];\n\n  // Render the accession\n  return (\n    <ErrorBoundary>\n      {' '}\n      <PdbCtx.Provider value={pdbData}>\n        <Routes>\n          <Route\n            path={`/`}\n            element={Component ?\n              <Suspense fallback={<Loading />}>\n                <Component />\n              </Suspense>\n              : <>{`Subpage \"${subPage}\" not known`}</>\n            }\n          />\n          <Route\n            path={`/json`}\n            element={\n              <Suspense fallback={<Loading />}>\n                <JsonViewer url={dataUrl} />\n              </Suspense>\n            }\n          />\n          <Route\n            path=\"*\"\n            element={'This route is not defined in the client accession'}\n          />\n        </Routes>\n      </PdbCtx.Provider>\n    </ErrorBoundary>\n  );\n};\n\n// Render a button which links to the API\nconst LinkSwitch = ({ accessionAndMdNumber, subPage }) => {\n  const jsonURL = getDataURL(accessionAndMdNumber, subPage);\n  if (!jsonURL) return null;\n  return (\n    <Button\n      component={Link}\n      target=\"_blank\"\n      to={`/id/${accessionAndMdNumber}/${subPage}/json`}\n      className={style['link-to-api']}\n    >\n      <FontAwesomeIcon icon={faBook} />\n      &nbsp;&nbsp;data in this page\n    </Button>\n  );\n};\n\n// Set a function to see if project data matches the one requested\nconst checkProjectDataUpdated = (projectData, requestedAccession, requestedMdNumber) => {\n  // Check accesions match\n  if (!projectData) return false;\n  if (projectData.accession !== requestedAccession && projectData.identifier !== requestedAccession) return false;\n  // If the project has not mds at all the we are good\n  if (!projectData.mdNumber) return true;\n  // Otherwise we must check MD numbers match\n  const requiredMdNumber = requestedMdNumber !== null ? requestedMdNumber : projectData.mdref + 1;\n  if (projectData.mdNumber !== requiredMdNumber) return false;\n  return true;\n};\n\nexport default () => {\n  // Get the location and the history\n  const location = useLocation();\n  const history = useNavigate();\n  // Get the project accession according to the URL\n  // Get the actual page where the user is going according to the URL\n  const { accession: accessionAndMdNumber, page } = useParams();\n  const accessionSplits = accessionAndMdNumber.split('.');\n  const accession = accessionSplits[0];\n  const mdNumber = accessionSplits.length > 1 ? +accessionSplits[1] : null;\n  // Set a state to store the current project data\n  const [project, setProject] = useState(null);\n  // Set the current project data according to the requested accession\n  let updatedProjectData = false;\n  // Check the if the state project data matches the current accession\n  // If so, set the state project data as the current project data\n  updatedProjectData = checkProjectDataUpdated(project, accession, mdNumber);\n  // In case we are still missing the current project data, check if we have some project data in the location state\n  // This may happen when we come from the browser: the selected project data is passed through the state\n  // This way we do not have to query again for it\n  // If the state project data matches the current accession then set it as the current project data\n  if (!updatedProjectData) {\n    const stateProjectData = location.state && location.state.projectData;\n    if (checkProjectDataUpdated(stateProjectData, accession, mdNumber)) {\n      // Save the current project data as the state project data and stop here\n      const newProject = new Project(stateProjectData);\n      setProject(newProject);\n    }\n  }\n  // If current project data is still missing then query the API for it\n  // Note that useAPI cannot be called conditionally since it is a hook\n  // Thus setting the url as null is a workaround to not perform the query\n  const projectURL = updatedProjectData\n    ? null\n    : `${BASE_PATH_PROJECTS}/${accessionAndMdNumber}/`;\n  const projectQuery = useAPI(projectURL);\n  // Make some modifications to the project data once loaded\n  useMemo(() => {\n    if (!project) return;\n    // If accession is missing then set the identifier as the accession\n    if (!project.accession) project.accession = project.identifier;\n    // Order chain indices by alphabetic number when we have new project data\n    if (project.chains) project.chains.sort();\n  }, [project]);\n  // If we are waiting for the API response...\n  if (!updatedProjectData) {\n    // If we are still waiting for the API then stop here\n    // If there was any error or the payload is missing then warn the user and stop here\n    if (projectQuery.loading) return <Loading />;\n    else if (projectQuery.error) return projectQuery.error.toString();\n    else if (!projectQuery.payload)\n      return 'Something bad happened with the project data';\n    // If the requested MD was rmeoved then return an error message\n    if (projectQuery.payload.removed) return 'The requested MD has been removed';\n    // Save the current project data as the state project data\n    const newProject = new Project(projectQuery.payload);\n    setProject(newProject);\n  }\n  // Should not happen, but sometimes...\n  if (!project) return;\n  // Set the footer line for the help tooltip\n  const doc = docs.find(doc => doc.id === page); // doc may not exist\n  const tooltip = doc && doc.page && (\n    <>\n      {doc.page}\n      <br />\n      <br />\n      To learn more about this page and how data is obtained please{' '}\n      <a\n        href={`/help#/help#${doc.id}`}\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        {'click here'}\n      </a>\n      .\n    </>\n  );\n  // Find out if the user is requesting the raw data, and not the interface\n  const fullpath = location.pathname;\n  const isJson = fullpath.substr(fullpath.length - 5) === '/json';\n  // Set the API URL to obtain the corresponding web page data\n  const dataUrl = getDataURL(accessionAndMdNumber, page);\n  // Check if there are multiple MDs\n  const multipleMDs = project.mdCount > 1;\n  // Return the accession routes\n  return (\n    // Set the project context, which is used by different scripts including this\n    <ProjectCtx.Provider value={project}>\n      <ProjectMenu accessionAndMdNumber={accessionAndMdNumber} subPage={page} />\n      <span className={style.container}>\n        {/* Render the accession */}\n        <Typography variant=\"h6\" className={style.title}>\n          {`Project ${accession}`}\n          <ChevronRightIcon color=\"primary\" fontSize='large'/>\n          {/* MD selector */}\n          {multipleMDs &&\n            <Select\n              variant=\"standard\"\n              value={project.mdIndex}\n              onChange={event => {\n                const newMdNumber = event.target.value + 1;\n                history(`/id/${accession}.${newMdNumber}/${page}`);\n              }}\n              className={style.selector}\n            >\n              {project.mds.map((md, i) => (\n                <MenuItem key={i} value={i}>\n                  {md}\n                </MenuItem>\n              ))}\n            </Select>\n          }\n          {multipleMDs && <ChevronRightIcon color=\"primary\" fontSize='large'/>}\n          {`${NICE_NAMES.get(page) || page} page ${isJson ? ' (raw data)' : ''}`}\n          {!isJson && doc && doc.page && (\n            <Info tooltip={tooltip} className={style.info} />\n          )}\n        </Typography>\n        {/* Render a button which links to the API */}\n        {isJson ? (\n          <Button\n            target=\"_blank\"\n            href={dataUrl}\n            className={style['link-to-api']}\n          >\n            <FontAwesomeIcon icon={faLink} />\n            &nbsp;REST API\n          </Button>\n        ) : (\n          <LinkSwitch accessionAndMdNumber={accessionAndMdNumber} subPage={page} />\n        )}\n      </span>\n      {/* Load the main data summary */}\n      <SummarySwitch subPage={page} dataUrl={dataUrl} />\n    </ProjectCtx.Provider>\n  );\n};"],"names":["CustomTooltip","styled","forwardRef","_ref","ref","className","props","_jsx","Tooltip","classes","popper","_ref2","theme","concat","tooltipClasses","tooltip","fontSize","maxWidth","margin","_ref3","open","setOpen","useState","ClickAwayListener","onClickAway","closeIt","children","title","disableFocusListener","disableHoverListener","disableTouchListener","IconButton","style","color","onClick","toogleOpen","previous","FontAwesomeIcon","icon","faInfoCircle","size","ProjectMenu","lazy","Overview","Files","Trajectory","Rmsds","Rgyr","Fluctuation","PCA","RmsdPerres","Electrostatic","DistPerres","RmsdPairwise","Hbonds","Energies","Pockets","Mutations","Epitopes","Sasa","JsonViewer","pageComponents","overview","trajectory","electrostatic","rgyr","rmsds","pca","fluctuation","sasa","hbonds","energies","pockets","mutations","epitopes","populations","markov","files","getDataURL","accessionAndMdNumber","subPage","end","BASE_PATH","SummarySwitch","dataUrl","project","useContext","ProjectCtx","pdbData","useNGLFile","BASE_PATH_PROJECTS","MAIN_STRUCTURE_FILENAME","defaultRepresentation","ext","loading","Loading","error","toString","file","Component","_jsxs","ErrorBoundary","PdbCtx","Provider","value","Routes","Route","path","element","Suspense","fallback","_Fragment","url","LinkSwitch","Button","component","Link","target","to","faBook","checkProjectDataUpdated","projectData","requestedAccession","requestedMdNumber","accession","identifier","mdNumber","requiredMdNumber","mdref","location","useLocation","history","useNavigate","page","useParams","accessionSplits","split","length","setProject","updatedProjectData","stateProjectData","state","Project","projectURL","projectQuery","useAPI","useMemo","chains","sort","payload","removed","doc","docs","find","id","href","rel","fullpath","pathname","isJson","substr","multipleMDs","mdCount","Typography","variant","ChevronRightIcon","Select","mdIndex","onChange","event","newMdNumber","mds","map","md","i","MenuItem","NICE_NAMES","get","Info","faLink"],"sourceRoot":""}